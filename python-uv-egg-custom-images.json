{
  "_comment": "Python UV Egg with Custom Docker Images",
  "meta": {
    "version": "PTDL_v2",
    "update_url": null
  },
  "exported_at": "2025-10-25T19:05:07+00:00",
  "name": "Python UV (Custom Images)",
  "author": "me@prestonhager.com",
  "description": "Python application server with UV package manager using custom Docker images",
  "features": null,
  "docker_images": {
    "python-uv-3.14": "ghcr.io/prestonhager/python-uv:3.14",
    "python-uv-3.13": "ghcr.io/prestonhager/python-uv:3.13",
    "python-uv-3.12": "ghcr.io/prestonhager/python-uv:3.12",
    "python-uv-3.11": "ghcr.io/prestonhager/python-uv:3.11",
    "python-uv-3.10": "ghcr.io/prestonhager/python-uv:3.10",
    "python-uv-3.9": "ghcr.io/prestonhager/python-uv:3.9",
    "python-uv-3.8": "ghcr.io/prestonhager/python-uv:3.8"
  },
  "file_denylist": [],
  "startup": "if [[ ${PULL_ON_START} ]]; then git pull; fi; if [[ ! -z \"${ADDITIONAL_PACKAGES}\" ]]; then uv add ${ADDITIONAL_PACKAGES}; fi; ${STARTUP_COMMAND}",
  "config": {
    "files": "{}",
    "startup": "{\n    \"done\": \")! For help, type \",\n    \"userInteraction\": [\n        \"Go to eula.txt for more info.\"\n    ]\n}",
    "logs": "{}",
    "stop": "^C"
  },
  "scripts": {
    "installation": {
      "script": "#!/bin/ash\n# Python UV Installation Script\n#\n# Server Files: /mnt/server\napk update\napk add --no-cache curl git\nmkdir -p /mnt/server\ncd /mnt/server\n\n# Clone repository if REPO_URL is provided\nif [[ ! -z \"${REPO_URL}\" ]]; then\n    echo \"Cloning repository from ${REPO_URL}...\"\n    \n    # Handle authentication if credentials are provided\n    if [[ ! -z \"${GIT_USERNAME}\" ]] && [[ ! -z \"${GIT_TOKEN}\" ]]; then\n        # Extract domain and path from URL\n        REPO_DOMAIN=$(echo ${REPO_URL} | sed -E 's|https?://([^/]+).*|\\1|')\n        REPO_PATH=$(echo ${REPO_URL} | sed -E 's|https?://[^/]+/(.*)|\\1|')\n        AUTH_URL=\"https://${GIT_USERNAME}:${GIT_TOKEN}@${REPO_DOMAIN}/${REPO_PATH}\"\n        git clone ${AUTH_URL} .\n    else\n        git clone ${REPO_URL} .\n    fi\n    \n    echo \"Repository cloned successfully!\"\nelse\n    echo \"No repository URL provided. Creating empty project structure...\"\n    \n    # Create a basic main.py if it doesn't exist\n    if [[ ! -f main.py ]]; then\n        cat > main.py << 'EOF'\n#!/usr/bin/env python3\nprint(\"Hello from Python UV Environment!\")\nprint(\"Please configure your application in this file.\")\nEOF\n        chmod +x main.py\n    fi\nfi\n\n# Initialize uv project if pyproject.toml doesn't exist\nif [[ ! -f pyproject.toml ]]; then\n    echo \"Initializing uv project...\"\n    uv init --python ${UV_PYTHON_VERSION:-3.14} --name python-app\nfi\n\n# Install additional packages if specified\nif [[ ! -z \"${ADDITIONAL_PACKAGES}\" ]]; then\n    echo \"Installing additional packages: ${ADDITIONAL_PACKAGES}\"\n    uv add ${ADDITIONAL_PACKAGES}\nfi\n\necho \"Python UV Environment installation completed!\"\necho \"Repository location: /mnt/server\"\necho \"Available commands:\"\necho \"  - uv run python main.py\"\necho \"  - uv add <package-name>\"\necho \"  - uv sync\"\n",
      "container": "ghcr.io/pterodactyl/installers:alpine",
      "entrypoint": "ash"
    }
  },
  "variables": [
    {
      "name": "REPO_URL",
      "description": "Git repository URL (GitHub/GitLab)",
      "env_variable": "REPO_URL",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:255",
      "field_type": "text"
    },
    {
      "name": "STARTUP_COMMAND",
      "description": "Command to run your Python application",
      "env_variable": "STARTUP_COMMAND",
      "default_value": "uv run python main.py",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:255",
      "field_type": "text"
    },
    {
      "name": "UV_PYTHON_VERSION",
      "description": "Python version to use (default: 3.14, supports 3.8-3.14)",
      "env_variable": "UV_PYTHON_VERSION",
      "default_value": "3.14",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|in:3.8,3.9,3.10,3.11,3.12,3.13,3.14",
      "field_type": "text"
    },
    {
      "name": "ADDITIONAL_PACKAGES",
      "description": "Additional Python packages to install (space-separated)",
      "env_variable": "ADDITIONAL_PACKAGES",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:255",
      "field_type": "text"
    },
    {
      "name": "PULL_ON_START",
      "description": "Pull latest changes from repository on startup",
      "env_variable": "PULL_ON_START",
      "default_value": "1",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean",
      "field_type": "text"
    },
    {
      "name": "GIT_USERNAME",
      "description": "Git username for private repositories",
      "env_variable": "GIT_USERNAME",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:255",
      "field_type": "text"
    },
    {
      "name": "GIT_TOKEN",
      "description": "Git token/password for private repositories",
      "env_variable": "GIT_TOKEN",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:255",
      "field_type": "text"
    }
  ]
}
