name: Build, Test, and Release Docker Images

permissions:
  contents: read
  packages: write
  security-events: write

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      python_versions:
        description: 'Python versions to build (comma-separated, e.g., "3.13,3.14")'
        required: false
        default: '3.8,3.9,3.10,3.11,3.12,3.13,3.14'
      push_images:
        description: 'Push images to registry'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: prestonhager/python-uv

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=${{ matrix.python_version }},enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=false

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          load: ${{ github.event_name != 'push' || github.ref != 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.python_version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          IMAGE_REF="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.python_version }}"
          echo "Testing image: $IMAGE_REF"
          
          # Test Python version
          docker run --rm $IMAGE_REF python --version
          
          # Test UV installation
          docker run --rm $IMAGE_REF uv --version
          
          # Test entrypoint functionality
          docker run --rm -e STARTUP="echo 'Hello from Python ${{ matrix.python_version }} with UV!'" $IMAGE_REF
          
          # Test working directory
          docker run --rm -e STARTUP="pwd" $IMAGE_REF
          
          # Test user permissions
          docker run --rm -e STARTUP="whoami" $IMAGE_REF
          
          # Test UV project initialization
          docker run --rm -e STARTUP="uv init --help" $IMAGE_REF
          
          # Test Alpine package manager
          docker run --rm -e STARTUP="apk --version" $IMAGE_REF

      - name: Generate egg configuration
        if: github.ref == 'refs/heads/main' && matrix.python_version == '3.14'
        run: |
          # Use the Python script to generate properly formatted JSON
          cd build
          python3 generate-egg-config.py
          mv python-uv-egg-custom-images.json ../python-uv-egg-github-actions.json
          cd ..

      - name: Upload egg configuration
        if: github.ref == 'refs/heads/main' && matrix.python_version == '3.14'
        uses: actions/upload-artifact@v4
        with:
          name: python-uv-egg-github-actions
          path: python-uv-egg-github-actions.json
          retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:3.14
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  release:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download egg configuration
        uses: actions/download-artifact@v4
        with:
          name: python-uv-egg-github-actions
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Python UV Docker Images v${{ github.run_number }}
          body: |
            ## Python UV Docker Images Release v${{ github.run_number }}
            
            This release includes updated Python UV Docker images built with GitHub Actions.
            
            ### üê≥ Docker Images
            - `ghcr.io/PrestonHager/python-uv:3.8` - Python 3.8.x
            - `ghcr.io/PrestonHager/python-uv:3.9` - Python 3.9.x
            - `ghcr.io/PrestonHager/python-uv:3.10` - Python 3.10.x
            - `ghcr.io/PrestonHager/python-uv:3.11` - Python 3.11.x
            - `ghcr.io/PrestonHager/python-uv:3.12` - Python 3.12.x
            - `ghcr.io/PrestonHager/python-uv:3.13` - Python 3.13.x
            - `ghcr.io/PrestonHager/python-uv:3.14` - Python 3.14.x
            
            ### ‚ú® Features
            - Alpine Linux base for smaller, more secure images
            - Pre-installed UV package manager
            - Shell entrypoint for complex startup commands
            - Non-root container user for security
            - Multi-platform support (linux/amd64, linux/arm64)
            
            ### üìã Pterodactyl Egg
            Attached is the `python-uv-egg-github-actions.json` file ready for upload to your Pterodactyl panel.
            
            ### üîí Security
            All images have been scanned for vulnerabilities using Trivy.
            
            ### üöÄ Usage
            ```bash
            # Pull the latest image
            docker pull ghcr.io/PrestonHager/python-uv:3.14
            
            # Run a container
            docker run --rm -e STARTUP="uv run python main.py" ghcr.io/PrestonHager/python-uv:3.14
            ```
          draft: false
          prerelease: false

      - name: Upload egg configuration to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./python-uv-egg-github-actions.json
          asset_name: python-uv-egg-github-actions.json
          asset_content_type: application/json
